name: CI

on:
  push:
    branches: ["**"]
  pull_request:

permissions:
  contents: write

jobs:
  test:
    name: Test & Coverage (Gradle)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run tests with JaCoCo
        run: ./gradlew test jacocoTestReport

      - name: Upload test reports (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            **/build/test-results/test/**
            **/build/reports/tests/test/**
            **/build/reports/jacoco/test/**
          if-no-files-found: ignore

      # --- Generate and commit coverage badges ---
      - name: Generate JaCoCo badges
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          jacoco-csv-file: build/reports/jacoco/test/jacocoTestReport.csv
          generate-branches-badge: true

      - name: Add/Update coverage badges in README
        if: steps.jacoco.outputs.coverage != ''
        run: |
          badge_line="![Coverage](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/raw/${GITHUB_REF_NAME}/.github/badges/jacoco.svg) ![Branches](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/raw/${GITHUB_REF_NAME}/.github/badges/branches.svg)"
          if grep -q "<!-- coverage-badge-start -->" README.md; then
            awk -v repl="$badge_line" '
              /<!-- coverage-badge-start -->/ {print; print repl; skip=1; next}
              /<!-- coverage-badge-end -->/ {skip=0}
              !skip
            ' README.md > README.md.tmp && mv README.md.tmp README.md
          else
            printf "\n<!-- coverage-badge-start -->\n%s\n<!-- coverage-badge-end -->\n" "$badge_line" >> README.md
          fi

      - name: Commit badge + README
        if: steps.jacoco.outputs.coverage != ''
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .github/badges/*.svg README.md || true
          git commit -m "chore(ci): update coverage badges (lines=${{ steps.jacoco.outputs.coverage }}%, branches=${{ steps.jacoco.outputs.branches }}%)" || echo "No changes"
          git push || true

  docker-build:
    name: Docker Build (message only)
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Print docker stage message
        run: |
          echo "Docker build stage present but intentionally skipped (no image build/push)."

  deploy:
    name: Deploy (message only, dev/main only)
    needs: docker-build
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main' }}
    steps:
      - name: Print deploy stage message
        run: |
          echo "Deploy stage placeholder running on branch: $GITHUB_REF_NAME"
          echo "No real deployment performed for this assignment."
